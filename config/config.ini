[general]
owner = sepideh.saran@mdc-berlin.de and svetlana.lebedeva@mdc-berlin.de
version = 1
# train_eval or gen_figure
run_mode = train_eval
# for reproducability
random_seed= 7
# for averaging sevaral runs
ls_random_seeds= 7
verbose = True
save_intermediate_res = True
# permutation repteat
perm_repeat = 5
res_path = path_to_your_results_folder_here
data_path =  path_to_your_data_folder_here


[data_files]
pro_coding_fasta_file = gencode.v19.pc_transcripts.fa
non_coding_fasta_file = gencode.v19.lncRNA_transcripts.fa
3utr_only_fasta_file = gencode.v19.3utr_seq.fa
parclip_bs_centers = 2022_R_output_parclip.csv
top_isoforms_per_cellline = hg19_top_isoform_per_cell_line.csv
gene_to_name = human_gencode_gene2name.csv
deprecated_parclip_gene_level_stability_file = ST3.txt
deprecated_k562_gene_level_stability_file = K562_gene_level_deg_rates_neel_way.csv
hek293_gene_level_label_file = degradation_rates/hek293_gene_level_bam_INSPEcT_rates_TrP_TE.txt
k562_gene_level_label_file = degradation_rates/k562_gene_level_bam_INSPEcT_rates_TrP_TE.txt
hepg2_gene_level_label_file = degradation_rates/hepg2_gene_level_bam_INSPEcT_rates_TrP_TE.txt
hela_gene_level_label_file = degradation_rates/hela_gene_level_bam_INSPEcT_rates_TrP_TE.txt
gm12878_gene_level_label_file = degradation_rates/gm12878_gene_level_bam_INSPEcT_rates.txt
parclip_selected_tx_bins = all_PARCLIP_RBP_on_selected_tx.csv
eclip_selected_tx_bins = all_eCLIP_RBP_on_selected_tx.csv
parclip_selected_3utr_bins = all_PARCLIP_RBP_on_3utr.csv
eclip_selected_3utr_bins = all_eCLIP_RBP_on_3utr.csv
all_rbps_bed_folder_name = parclip_clusterbeds_with_score/
exon_density_file = exon_density_on_selected_tx.csv




[input_data_selection]
# choices are deepripe_only, deepripe_rawclip, rawclip_only, baseline_deepripe_only
rbp_input_for_regressor = rawclip_only
# if rawclip_only or deepripe_rawclip selected for input_for_regressor then here
# choices of sum_bins_binary, bins_binary, log_sum_bins_binary
# currently unsuable agg_modes: max_scores, sum_scores, max_counts, sum_counts
raw_clip_agg = bins_binary
# include exon density info or not along side RBP binding info
exon_density_included = False
log2_exon_density = True
# if deepripe_only or deepripe_rawclip selected for rbp_input_for_regressor then here
# choices are a list of one to three cell-lines with default being all three hek293, k562, hepg2
deepripe_pretrained_cell_lines = hek293, k562, hepg2
# if multiple pretrained deepripes are to be aggregated - several cell lines in deepripe_pretrained_cell_lines then
# currently the only choice supported is
pretrained_deepripes_agg = max
# if deepripe_only or deepripe_rawclip selected for rbp_input_for_regressor then here
# choice of including all RBPs or only selected well-performing RBPs with good sequence motif
# currently only available for hek293
deepripe_selected_rbps_only = False
# if deepripe_rawclip is selected and selected rbps are taken, we can choose to replace deepripe rbps instead of raw clip
replace_rawclip_with_deepripe_rbps = False
# in case of deepripe_rawclip, we can decide if we want to fill in zeros for missing raw data or remove the data points altogether
fill_missing_raw_clip = False
# deepripe inference takes time - for debugging purposes calculate once and load pickle for future runs
# choice of run or load
deepripe_inference = load
# if we run DeepRiPe with all regions or 3ÃšTR only, choices of all or 3utr
transcript_regions = 3utr
binary_binding_sites = False
# only in case of differential
# multiple train or test cell-lines can be selected by providing a comma-separated list of cell-lines
ls_train_cell_lines = hek293
ls_test_cell_lines = k562
ls_prediction_labels = Deg

# choices of all, HEK, K562
raw_clip_cell_lines = all
# note that only one of differential_isoforms or differential_genes can be set to True
differential_isoforms = True
differential_genes = False
# remove the isoform from the training dataset when running in differential isoform setting
remove_training_iso = False
non_diff_with_kfold = False

[model_selection]
# choices of regressor and classifier
model_category = regressor
# choices of linear_regression, lasso_regression, ridge_regression, logistic_regression, gradient_boosted_tree_regressor,
# gradient_boosted_tree_classifier, ridge_classifier
# multi_layer_perceptron, multi_legged_nn
model_type = gradient_boosted_tree_regressor
# choices of 3 or 5 classes in case the model_category is classifier
n_classes = 3
# cross validation params
k_folds = 5
n_repeats = 5

[deepripe]
# pretrained_models - will be overwritten by the local_config.ini
hek293_models_path = pretrained_deepripe/parclip/
k562_models_path = pretrained_deepripe/encode/k562/
hepg2_models_path = pretrained_deepripe/encode/hepg2/
# pretrained_models
hek293_models_path = path_to_your_models_folder_here/pretrained_deepripe/parclip/
k562_models_path = path_to_your_models_folder_here/pretrained_deepripe/encode/k562/
hepg2_models_path = path_to_your_models_folder_here/pretrained_deepripe/encode/hepg2/


# bin sizes used for training models
hek293_bin_size = 150
k562_bin_size = 200
hepg2_bin_size = 200
every_eclip_bin_size = 200
# whether sequence only pretrained model is loaded for inference or do we also need region input
# choices of sequence_only or sequence_region
hek293_model_type = sequence_region
k562_model_type = sequence_only
hepg2_model_type = sequence_only

# rbp_lists - RBP names for each model

# hek293
rbp_hek293_list_names = rbps_hek293_low, rbps_hek293_mid, rbps_hek293_high
model_hek293_list_names = model_RBPslow.h5, model_RBPsmed.h5, model_RBPshigh.h5
rbps_hek293_low = MBNL1, P53_NONO, PUM2, QKI, AGO3, FUS, TAF15, ZFP36, DICER1, EIF3A, EIF3D,
                EIF3G, SSB, PAPD5, CPSF4, CPSF3, RTCB, FXR1, NOP58, NOP56, FBL, LIN28A, LIN28B, UPF1,
                G35, G45, XPO5
rbps_hek293_mid = TARDBP, ELAVL2, ELAVL3, ELAVL4, RBM20, IGF2BP1, IGF2BP2, IGF2BP3, EWSR1, HNRNPD,
               RBPMS, SRRM4, AGO2, NUDT21, FIP1L1, CAPRIN1, FMR1iso7, FXR2, AGO1, L1RE1, ORF1
rbps_hek293_high = DND1, CPSF7, CPSF6, CPSF1, CSTF2, CSTF2T, ZC3H7B, FMR1iso1, RBM10, MOV10, ELAVL1

# the selected well-performing RBPs
selected_rbps_hek293 = MBNL1, PUM2, QKI, NOP58, NOP56,TARDBP, ELAVL1, ELAVL2, ELAVL3, ELAVL4, HNRNPD, RBPMS, L1RE1, ORF1 ,DND1, CSTF2T, ZC3H7B , ZFP36

# k562
rbp_k562_list_names = rbps_k562_low, rbps_k562_mid1, rbps_k562_mid2, rbps_k562_high1, rbps_k562_high2
model_k562_list_names = eclip_model_encodeK562_low_seq.h5, eclip_model_encodeK562_mid1_seq.h5, eclip_model_encodeK562_mid2_seq.h5, eclip_model_encodeK562_high1_seq.h5, eclip_model_encodeK562_high2_seq.h5
rbps_k562_low = MTPAP, RBM22, DHX30, DDX6, DDX55, TRA2A, XRN2, U2AF1, LSM11, ZC3H11A, NOLC1, KHDRBS1, GPKOW, DGCR8, AKAP1, FXR1, DDX52, AATF
rbps_k562_mid1 = U2AF2, AKAP8L, METAP2, SMNDC1, GEMIN5, HNRNPK, SLTM, SRSF1, FMR1, SAFB2, DROSHA, RPS3, IGF2BP2, ILF3, RBFOX2, QKI, PCBP1, ZNF800, PUM1
rbps_k562_mid2 = EFTUD2, LIN28B, AGGF1, HNRNPL, SND1, GTF2F1, EIF4G2, TIA1, TARDBP, FXR2, HNRNPM, IGF2BP1, PUM2, FAM120A, DDX3X, MATR3, FUS, GRWD1, PABPC4
rbps_k562_high1 = BUD13, PTBP1, DDX24, EWSR1, RBM15
rbps_k562_high2 = SF3B4, YBX3, UCHL5, KHSRP, ZNF622, NONO, EXOSC5, PRPF8, CSTF2T, AQR, UPF1


# hepg2
rbp_hepg2_list_names = rbps_hepg2_low, rbps_hepg2_mid1, rbps_hepg2_mid2, rbps_hepg2_high1, rbps_hepg2_high2
model_hepg2_list_names = eclip_model_encodeHepG2_low_seq.h5, eclip_model_encodeHepG2_mid1_seq.h5, eclip_model_encodeHepG2_mid2_seq.h5, eclip_model_encodeHepG2_high1_seq.h5, eclip_model_encodeHepG2_high2_seq.h5
rbps_hepg2_low = RBM22, GRSF1, CDC40, NOLC1, FKBP4, DGCR8, ZC3H11A, XRN2,SLTM, DDX55, TIA1, SRSF1, U2AF1, RBM15
rbps_hepg2_mid1 = LSM11, NKRF, SUB1, NCBP2, UCHL5, LIN28B, IGF2BP3, SF3A3, AGGF1, DROSHA, DDX59, CSTF2, DKC1, EIF3H, FUBP3, SFPQ, HNRNPC, ILF3, TIAL1, HLTF, ZNF800, PABPN1, YBX3, FXR2
rbps_hepg2_mid2 = GTF2F1, IGF2BP1, HNRNPK, XPO5, RPS3, SF3B4, LARP4, BUD13, SND1, G3BP1, AKAP1, KHSRP
rbps_hepg2_high1 = DDX3X, PCBP2, FAM120A, HNRNPL, RBFOX2, PTBP1, MATR3, EFTUD2, PRPF4, UPF1
rbps_hepg2_high2 = GRWD1, PRPF8, PPIG, CSTF2T, QKI, U2AF2, SUGP2, HNRNPM, AQR, BCLAF1


[linear_regression]
test_frac=0.2
k_folds=5
scaling_method = minmax

[lasso_regression]
test_frac=0.2
k_folds=5
alpha=0.001
scaling_method = minmax

[ridge_regression]
test_frac=0.2
k_folds=5
scaling_method = minmax

[logistic_regression]
test_frac=0.2
k_folds=5
scaling_method = minmax

[gradient_boosted_tree_regressor]
test_frac=0.2
k_folds=5
patience = 5
n_estimators = 300
max_depth = 5
subsample = 1.0
scaling_method = minmax

[gradient_boosted_tree_classifier]
test_frac=0.2
k_folds=5
patience = 5
n_estimators = 300
max_depth = 5
subsample = 1.0
scaling_method = minmax

[multi_layer_perceptron]
test_frac=0.2
k_folds=5
epochs=50
batch_size=64
patience=5
scaling_method = minmax

[multi_legged_nn]
test_frac=0.2
valid_frac=0.2
k_folds=5
epochs=50
batch_size=64
patience=5


